{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\integration\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box, Typography, Snackbar, Alert } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if a token exists in localStorage\n    const existingToken = localStorage.getItem('authToken');\n    if (existingToken) {\n      // Optionally, you can send the token to the backend for verification\n      axios.post('http://localhost:3001/api/verify-token', {\n        token: existingToken\n      }).then(response => {\n        setSnackbarMessage('Token is valid');\n        setOpenSnackbar(true);\n        setTimeout(() => {\n          navigate('/');\n        }, 1000);\n      }).catch(error => {\n        var _error$response, _error$response$data;\n        console.log('Token verification failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n        setSnackbarMessage('Invalid or expired token');\n        setOpenSnackbar(true);\n        localStorage.removeItem('authToken'); // Clear invalid token\n      });\n    }\n  }, [navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/api/login', {\n        email,\n        password\n      });\n      const token = response.data.token;\n\n      // Store the token in localStorage\n      localStorage.setItem('authToken', token);\n\n      // Set success message , then open Snackbar\n      setSnackbarMessage('Login successful!');\n      setOpenSnackbar(true);\n\n      // Redirect to the home page after a delay\n      setTimeout(() => {\n        navigate('/');\n      }, 1000);\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      console.log('Error while logging in:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n      setSnackbarMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'An error occurred');\n      setOpenSnackbar(true);\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    bgcolor: \"#f5f5f5\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        p: 4,\n        bgcolor: 'white',\n        boxShadow: 3,\n        borderRadius: 2,\n        minWidth: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        type: \"email\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        sx: {\n          mt: 2\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"7+YIZFcwMdTu33XYql1L9lWC138=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","Typography","Snackbar","Alert","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","snackbarMessage","setSnackbarMessage","openSnackbar","setOpenSnackbar","navigate","existingToken","localStorage","getItem","post","token","then","response","setTimeout","catch","error","_error$response","_error$response$data","console","log","data","message","removeItem","handleSubmit","event","preventDefault","setItem","_error$response2","_error$response2$data","_error$response3","_error$response3$data","handleCloseSnackbar","display","flexDirection","alignItems","justifyContent","height","bgcolor","children","component","onSubmit","sx","p","boxShadow","borderRadius","minWidth","variant","gutterBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","label","type","fullWidth","margin","value","onChange","e","target","required","color","mt","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/integration/client/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Box, Typography, Snackbar, Alert } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Check if a token exists in localStorage\r\n        const existingToken = localStorage.getItem('authToken');\r\n        if (existingToken) {\r\n            // Optionally, you can send the token to the backend for verification\r\n            axios.post('http://localhost:3001/api/verify-token', { token: existingToken })\r\n                .then(response => {\r\n                    setSnackbarMessage('Token is valid');\r\n                    setOpenSnackbar(true);\r\n                    setTimeout(() => {\r\n                        navigate('/');\r\n                    }, 1000);\r\n                })\r\n                .catch(error => {\r\n                    console.log('Token verification failed:', error.response?.data?.message || error.message);\r\n                    setSnackbarMessage('Invalid or expired token');\r\n                    setOpenSnackbar(true);\r\n                    localStorage.removeItem('authToken');  // Clear invalid token\r\n                });\r\n        }\r\n    }, [navigate]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/api/login', { email, password });\r\n\r\n            const token = response.data.token;\r\n\r\n            // Store the token in localStorage\r\n            localStorage.setItem('authToken', token);\r\n\r\n            // Set success message , then open Snackbar\r\n            setSnackbarMessage('Login successful!');\r\n            setOpenSnackbar(true);\r\n\r\n            // Redirect to the home page after a delay\r\n            setTimeout(() => {\r\n                navigate('/');\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.log('Error while logging in:', error.response?.data?.message || error.message);\r\n            setSnackbarMessage(error.response?.data?.message || 'An error occurred');\r\n            setOpenSnackbar(true);\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            height=\"100vh\"\r\n            bgcolor=\"#f5f5f5\"\r\n        >\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                sx={{\r\n                    p: 4,\r\n                    bgcolor: 'white',\r\n                    boxShadow: 3,\r\n                    borderRadius: 2,\r\n                    minWidth: 300,\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\" gutterBottom textAlign=\"center\">\r\n                    Login\r\n                </Typography>\r\n                <TextField\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Box>\r\n\r\n            {/* Snackbar to display messages */}\r\n            <Snackbar\r\n                open={openSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            >\r\n                <Alert onClose={handleCloseSnackbar}  sx={{ width: '100%' }}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}